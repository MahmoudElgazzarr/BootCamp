
AVR_Atmega32_First_Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000041e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000472  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000472  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000004a4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000050  00000000  00000000  000004e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000670  00000000  00000000  00000530  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000057a  00000000  00000000  00000ba0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000037f  00000000  00000000  0000111a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000a8  00000000  00000000  0000149c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000352  00000000  00000000  00001544  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000120  00000000  00000000  00001896  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  000019b6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <main>
  64:	0c 94 0d 02 	jmp	0x41a	; 0x41a <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <DIO_WritePin>:
#include "DIO_Registers.h"
#include "DIO_Registers_Definitions.h"
#include "BitwiseOperation.h"

void DIO_WritePin(uint8 PinNum,uint8 PinValue)
{
  6c:	cf 93       	push	r28
  6e:	df 93       	push	r29
  70:	00 d0       	rcall	.+0      	; 0x72 <DIO_WritePin+0x6>
  72:	cd b7       	in	r28, 0x3d	; 61
  74:	de b7       	in	r29, 0x3e	; 62
  76:	89 83       	std	Y+1, r24	; 0x01
  78:	6a 83       	std	Y+2, r22	; 0x02
	if(PinNum >= 0 && PinNum < 8 )
  7a:	89 81       	ldd	r24, Y+1	; 0x01
  7c:	88 30       	cpi	r24, 0x08	; 8
  7e:	78 f5       	brcc	.+94     	; 0xde <DIO_WritePin+0x72>
	{
			if(PinValue == 1)
  80:	8a 81       	ldd	r24, Y+2	; 0x02
  82:	81 30       	cpi	r24, 0x01	; 1
  84:	a1 f4       	brne	.+40     	; 0xae <DIO_WritePin+0x42>
			{
				Set_Bit( PORTA , PinNum);
  86:	8b e3       	ldi	r24, 0x3B	; 59
  88:	90 e0       	ldi	r25, 0x00	; 0
  8a:	2b e3       	ldi	r18, 0x3B	; 59
  8c:	30 e0       	ldi	r19, 0x00	; 0
  8e:	f9 01       	movw	r30, r18
  90:	20 81       	ld	r18, Z
  92:	62 2f       	mov	r22, r18
  94:	29 81       	ldd	r18, Y+1	; 0x01
  96:	42 2f       	mov	r20, r18
  98:	50 e0       	ldi	r21, 0x00	; 0
  9a:	21 e0       	ldi	r18, 0x01	; 1
  9c:	30 e0       	ldi	r19, 0x00	; 0
  9e:	02 c0       	rjmp	.+4      	; 0xa4 <DIO_WritePin+0x38>
  a0:	22 0f       	add	r18, r18
  a2:	33 1f       	adc	r19, r19
  a4:	4a 95       	dec	r20
  a6:	e2 f7       	brpl	.-8      	; 0xa0 <DIO_WritePin+0x34>
  a8:	26 2b       	or	r18, r22
  aa:	fc 01       	movw	r30, r24
  ac:	20 83       	st	Z, r18
			}
			if(PinValue == 0)
  ae:	8a 81       	ldd	r24, Y+2	; 0x02
  b0:	88 23       	and	r24, r24
  b2:	a9 f4       	brne	.+42     	; 0xde <DIO_WritePin+0x72>
			{
				Clear_Bit( PORTA , PinNum);
  b4:	8b e3       	ldi	r24, 0x3B	; 59
  b6:	90 e0       	ldi	r25, 0x00	; 0
  b8:	2b e3       	ldi	r18, 0x3B	; 59
  ba:	30 e0       	ldi	r19, 0x00	; 0
  bc:	f9 01       	movw	r30, r18
  be:	20 81       	ld	r18, Z
  c0:	62 2f       	mov	r22, r18
  c2:	29 81       	ldd	r18, Y+1	; 0x01
  c4:	42 2f       	mov	r20, r18
  c6:	50 e0       	ldi	r21, 0x00	; 0
  c8:	21 e0       	ldi	r18, 0x01	; 1
  ca:	30 e0       	ldi	r19, 0x00	; 0
  cc:	02 c0       	rjmp	.+4      	; 0xd2 <DIO_WritePin+0x66>
  ce:	22 0f       	add	r18, r18
  d0:	33 1f       	adc	r19, r19
  d2:	4a 95       	dec	r20
  d4:	e2 f7       	brpl	.-8      	; 0xce <DIO_WritePin+0x62>
  d6:	20 95       	com	r18
  d8:	26 23       	and	r18, r22
  da:	fc 01       	movw	r30, r24
  dc:	20 83       	st	Z, r18
			}
	}
	if(PinNum > 7 && PinNum < 16)
  de:	89 81       	ldd	r24, Y+1	; 0x01
  e0:	88 30       	cpi	r24, 0x08	; 8
  e2:	90 f1       	brcs	.+100    	; 0x148 <DIO_WritePin+0xdc>
  e4:	89 81       	ldd	r24, Y+1	; 0x01
  e6:	80 31       	cpi	r24, 0x10	; 16
  e8:	78 f5       	brcc	.+94     	; 0x148 <DIO_WritePin+0xdc>
	{
		if(PinValue == 1)
  ea:	8a 81       	ldd	r24, Y+2	; 0x02
  ec:	81 30       	cpi	r24, 0x01	; 1
  ee:	a1 f4       	brne	.+40     	; 0x118 <DIO_WritePin+0xac>
		{
			Set_Bit( PORTB , PinNum);
  f0:	88 e3       	ldi	r24, 0x38	; 56
  f2:	90 e0       	ldi	r25, 0x00	; 0
  f4:	28 e3       	ldi	r18, 0x38	; 56
  f6:	30 e0       	ldi	r19, 0x00	; 0
  f8:	f9 01       	movw	r30, r18
  fa:	20 81       	ld	r18, Z
  fc:	62 2f       	mov	r22, r18
  fe:	29 81       	ldd	r18, Y+1	; 0x01
 100:	42 2f       	mov	r20, r18
 102:	50 e0       	ldi	r21, 0x00	; 0
 104:	21 e0       	ldi	r18, 0x01	; 1
 106:	30 e0       	ldi	r19, 0x00	; 0
 108:	02 c0       	rjmp	.+4      	; 0x10e <DIO_WritePin+0xa2>
 10a:	22 0f       	add	r18, r18
 10c:	33 1f       	adc	r19, r19
 10e:	4a 95       	dec	r20
 110:	e2 f7       	brpl	.-8      	; 0x10a <DIO_WritePin+0x9e>
 112:	26 2b       	or	r18, r22
 114:	fc 01       	movw	r30, r24
 116:	20 83       	st	Z, r18
		}
		if(PinValue == 0)
 118:	8a 81       	ldd	r24, Y+2	; 0x02
 11a:	88 23       	and	r24, r24
 11c:	a9 f4       	brne	.+42     	; 0x148 <DIO_WritePin+0xdc>
		{
			Clear_Bit( PORTB , PinNum);
 11e:	88 e3       	ldi	r24, 0x38	; 56
 120:	90 e0       	ldi	r25, 0x00	; 0
 122:	28 e3       	ldi	r18, 0x38	; 56
 124:	30 e0       	ldi	r19, 0x00	; 0
 126:	f9 01       	movw	r30, r18
 128:	20 81       	ld	r18, Z
 12a:	62 2f       	mov	r22, r18
 12c:	29 81       	ldd	r18, Y+1	; 0x01
 12e:	42 2f       	mov	r20, r18
 130:	50 e0       	ldi	r21, 0x00	; 0
 132:	21 e0       	ldi	r18, 0x01	; 1
 134:	30 e0       	ldi	r19, 0x00	; 0
 136:	02 c0       	rjmp	.+4      	; 0x13c <DIO_WritePin+0xd0>
 138:	22 0f       	add	r18, r18
 13a:	33 1f       	adc	r19, r19
 13c:	4a 95       	dec	r20
 13e:	e2 f7       	brpl	.-8      	; 0x138 <DIO_WritePin+0xcc>
 140:	20 95       	com	r18
 142:	26 23       	and	r18, r22
 144:	fc 01       	movw	r30, r24
 146:	20 83       	st	Z, r18
		}
	}
	if(PinNum > 15 && PinNum < 24)
 148:	89 81       	ldd	r24, Y+1	; 0x01
 14a:	80 31       	cpi	r24, 0x10	; 16
 14c:	90 f1       	brcs	.+100    	; 0x1b2 <DIO_WritePin+0x146>
 14e:	89 81       	ldd	r24, Y+1	; 0x01
 150:	88 31       	cpi	r24, 0x18	; 24
 152:	78 f5       	brcc	.+94     	; 0x1b2 <DIO_WritePin+0x146>
	{
		if(PinValue == 1)
 154:	8a 81       	ldd	r24, Y+2	; 0x02
 156:	81 30       	cpi	r24, 0x01	; 1
 158:	a1 f4       	brne	.+40     	; 0x182 <DIO_WritePin+0x116>
		{
			Set_Bit( PORTC , PinNum);
 15a:	85 e3       	ldi	r24, 0x35	; 53
 15c:	90 e0       	ldi	r25, 0x00	; 0
 15e:	25 e3       	ldi	r18, 0x35	; 53
 160:	30 e0       	ldi	r19, 0x00	; 0
 162:	f9 01       	movw	r30, r18
 164:	20 81       	ld	r18, Z
 166:	62 2f       	mov	r22, r18
 168:	29 81       	ldd	r18, Y+1	; 0x01
 16a:	42 2f       	mov	r20, r18
 16c:	50 e0       	ldi	r21, 0x00	; 0
 16e:	21 e0       	ldi	r18, 0x01	; 1
 170:	30 e0       	ldi	r19, 0x00	; 0
 172:	02 c0       	rjmp	.+4      	; 0x178 <DIO_WritePin+0x10c>
 174:	22 0f       	add	r18, r18
 176:	33 1f       	adc	r19, r19
 178:	4a 95       	dec	r20
 17a:	e2 f7       	brpl	.-8      	; 0x174 <DIO_WritePin+0x108>
 17c:	26 2b       	or	r18, r22
 17e:	fc 01       	movw	r30, r24
 180:	20 83       	st	Z, r18
		}
		if(PinValue == 0)
 182:	8a 81       	ldd	r24, Y+2	; 0x02
 184:	88 23       	and	r24, r24
 186:	a9 f4       	brne	.+42     	; 0x1b2 <DIO_WritePin+0x146>
		{
			Clear_Bit( PORTC , PinNum);
 188:	85 e3       	ldi	r24, 0x35	; 53
 18a:	90 e0       	ldi	r25, 0x00	; 0
 18c:	25 e3       	ldi	r18, 0x35	; 53
 18e:	30 e0       	ldi	r19, 0x00	; 0
 190:	f9 01       	movw	r30, r18
 192:	20 81       	ld	r18, Z
 194:	62 2f       	mov	r22, r18
 196:	29 81       	ldd	r18, Y+1	; 0x01
 198:	42 2f       	mov	r20, r18
 19a:	50 e0       	ldi	r21, 0x00	; 0
 19c:	21 e0       	ldi	r18, 0x01	; 1
 19e:	30 e0       	ldi	r19, 0x00	; 0
 1a0:	02 c0       	rjmp	.+4      	; 0x1a6 <DIO_WritePin+0x13a>
 1a2:	22 0f       	add	r18, r18
 1a4:	33 1f       	adc	r19, r19
 1a6:	4a 95       	dec	r20
 1a8:	e2 f7       	brpl	.-8      	; 0x1a2 <DIO_WritePin+0x136>
 1aa:	20 95       	com	r18
 1ac:	26 23       	and	r18, r22
 1ae:	fc 01       	movw	r30, r24
 1b0:	20 83       	st	Z, r18
		}
	}
	
	if(PinNum > 24 && PinNum < 32)
 1b2:	89 81       	ldd	r24, Y+1	; 0x01
 1b4:	89 31       	cpi	r24, 0x19	; 25
 1b6:	90 f1       	brcs	.+100    	; 0x21c <DIO_WritePin+0x1b0>
 1b8:	89 81       	ldd	r24, Y+1	; 0x01
 1ba:	80 32       	cpi	r24, 0x20	; 32
 1bc:	78 f5       	brcc	.+94     	; 0x21c <DIO_WritePin+0x1b0>
	{
			if(PinValue == 1)
 1be:	8a 81       	ldd	r24, Y+2	; 0x02
 1c0:	81 30       	cpi	r24, 0x01	; 1
 1c2:	a1 f4       	brne	.+40     	; 0x1ec <DIO_WritePin+0x180>
			{
				Set_Bit( PORTD , PinNum);
 1c4:	82 e3       	ldi	r24, 0x32	; 50
 1c6:	90 e0       	ldi	r25, 0x00	; 0
 1c8:	22 e3       	ldi	r18, 0x32	; 50
 1ca:	30 e0       	ldi	r19, 0x00	; 0
 1cc:	f9 01       	movw	r30, r18
 1ce:	20 81       	ld	r18, Z
 1d0:	62 2f       	mov	r22, r18
 1d2:	29 81       	ldd	r18, Y+1	; 0x01
 1d4:	42 2f       	mov	r20, r18
 1d6:	50 e0       	ldi	r21, 0x00	; 0
 1d8:	21 e0       	ldi	r18, 0x01	; 1
 1da:	30 e0       	ldi	r19, 0x00	; 0
 1dc:	02 c0       	rjmp	.+4      	; 0x1e2 <DIO_WritePin+0x176>
 1de:	22 0f       	add	r18, r18
 1e0:	33 1f       	adc	r19, r19
 1e2:	4a 95       	dec	r20
 1e4:	e2 f7       	brpl	.-8      	; 0x1de <DIO_WritePin+0x172>
 1e6:	26 2b       	or	r18, r22
 1e8:	fc 01       	movw	r30, r24
 1ea:	20 83       	st	Z, r18
			}
			if(PinValue == 0)
 1ec:	8a 81       	ldd	r24, Y+2	; 0x02
 1ee:	88 23       	and	r24, r24
 1f0:	a9 f4       	brne	.+42     	; 0x21c <DIO_WritePin+0x1b0>
			{
				Clear_Bit( PORTD , PinNum);
 1f2:	82 e3       	ldi	r24, 0x32	; 50
 1f4:	90 e0       	ldi	r25, 0x00	; 0
 1f6:	22 e3       	ldi	r18, 0x32	; 50
 1f8:	30 e0       	ldi	r19, 0x00	; 0
 1fa:	f9 01       	movw	r30, r18
 1fc:	20 81       	ld	r18, Z
 1fe:	62 2f       	mov	r22, r18
 200:	29 81       	ldd	r18, Y+1	; 0x01
 202:	42 2f       	mov	r20, r18
 204:	50 e0       	ldi	r21, 0x00	; 0
 206:	21 e0       	ldi	r18, 0x01	; 1
 208:	30 e0       	ldi	r19, 0x00	; 0
 20a:	02 c0       	rjmp	.+4      	; 0x210 <DIO_WritePin+0x1a4>
 20c:	22 0f       	add	r18, r18
 20e:	33 1f       	adc	r19, r19
 210:	4a 95       	dec	r20
 212:	e2 f7       	brpl	.-8      	; 0x20c <DIO_WritePin+0x1a0>
 214:	20 95       	com	r18
 216:	26 23       	and	r18, r22
 218:	fc 01       	movw	r30, r24
 21a:	20 83       	st	Z, r18
			}
	}
}
 21c:	00 00       	nop
 21e:	0f 90       	pop	r0
 220:	0f 90       	pop	r0
 222:	df 91       	pop	r29
 224:	cf 91       	pop	r28
 226:	08 95       	ret

00000228 <DIO_SetPinDirection>:
/*
pindirection = 1 output
pindirection = 0 input
*/
void DIO_SetPinDirection(uint8 PinNum,uint8 PinDirection)
{
 228:	cf 93       	push	r28
 22a:	df 93       	push	r29
 22c:	00 d0       	rcall	.+0      	; 0x22e <DIO_SetPinDirection+0x6>
 22e:	cd b7       	in	r28, 0x3d	; 61
 230:	de b7       	in	r29, 0x3e	; 62
 232:	89 83       	std	Y+1, r24	; 0x01
 234:	6a 83       	std	Y+2, r22	; 0x02
		if(PinNum >= 0 && PinNum < 8 )
 236:	89 81       	ldd	r24, Y+1	; 0x01
 238:	88 30       	cpi	r24, 0x08	; 8
 23a:	78 f5       	brcc	.+94     	; 0x29a <DIO_SetPinDirection+0x72>
		{
			if(PinDirection== 1)
 23c:	8a 81       	ldd	r24, Y+2	; 0x02
 23e:	81 30       	cpi	r24, 0x01	; 1
 240:	a1 f4       	brne	.+40     	; 0x26a <DIO_SetPinDirection+0x42>
			{
				Set_Bit( DDRA , PinNum);
 242:	8a e3       	ldi	r24, 0x3A	; 58
 244:	90 e0       	ldi	r25, 0x00	; 0
 246:	2a e3       	ldi	r18, 0x3A	; 58
 248:	30 e0       	ldi	r19, 0x00	; 0
 24a:	f9 01       	movw	r30, r18
 24c:	20 81       	ld	r18, Z
 24e:	62 2f       	mov	r22, r18
 250:	29 81       	ldd	r18, Y+1	; 0x01
 252:	42 2f       	mov	r20, r18
 254:	50 e0       	ldi	r21, 0x00	; 0
 256:	21 e0       	ldi	r18, 0x01	; 1
 258:	30 e0       	ldi	r19, 0x00	; 0
 25a:	02 c0       	rjmp	.+4      	; 0x260 <DIO_SetPinDirection+0x38>
 25c:	22 0f       	add	r18, r18
 25e:	33 1f       	adc	r19, r19
 260:	4a 95       	dec	r20
 262:	e2 f7       	brpl	.-8      	; 0x25c <DIO_SetPinDirection+0x34>
 264:	26 2b       	or	r18, r22
 266:	fc 01       	movw	r30, r24
 268:	20 83       	st	Z, r18
			}
			if(PinDirection== 0)
 26a:	8a 81       	ldd	r24, Y+2	; 0x02
 26c:	88 23       	and	r24, r24
 26e:	a9 f4       	brne	.+42     	; 0x29a <DIO_SetPinDirection+0x72>
			{
				Clear_Bit( DDRA , PinNum);
 270:	8a e3       	ldi	r24, 0x3A	; 58
 272:	90 e0       	ldi	r25, 0x00	; 0
 274:	2a e3       	ldi	r18, 0x3A	; 58
 276:	30 e0       	ldi	r19, 0x00	; 0
 278:	f9 01       	movw	r30, r18
 27a:	20 81       	ld	r18, Z
 27c:	62 2f       	mov	r22, r18
 27e:	29 81       	ldd	r18, Y+1	; 0x01
 280:	42 2f       	mov	r20, r18
 282:	50 e0       	ldi	r21, 0x00	; 0
 284:	21 e0       	ldi	r18, 0x01	; 1
 286:	30 e0       	ldi	r19, 0x00	; 0
 288:	02 c0       	rjmp	.+4      	; 0x28e <DIO_SetPinDirection+0x66>
 28a:	22 0f       	add	r18, r18
 28c:	33 1f       	adc	r19, r19
 28e:	4a 95       	dec	r20
 290:	e2 f7       	brpl	.-8      	; 0x28a <DIO_SetPinDirection+0x62>
 292:	20 95       	com	r18
 294:	26 23       	and	r18, r22
 296:	fc 01       	movw	r30, r24
 298:	20 83       	st	Z, r18
			}
		}
		if(PinNum > 7 && PinNum < 16)
 29a:	89 81       	ldd	r24, Y+1	; 0x01
 29c:	88 30       	cpi	r24, 0x08	; 8
 29e:	90 f1       	brcs	.+100    	; 0x304 <DIO_SetPinDirection+0xdc>
 2a0:	89 81       	ldd	r24, Y+1	; 0x01
 2a2:	80 31       	cpi	r24, 0x10	; 16
 2a4:	78 f5       	brcc	.+94     	; 0x304 <DIO_SetPinDirection+0xdc>
		{
			if(PinDirection== 1)
 2a6:	8a 81       	ldd	r24, Y+2	; 0x02
 2a8:	81 30       	cpi	r24, 0x01	; 1
 2aa:	a1 f4       	brne	.+40     	; 0x2d4 <DIO_SetPinDirection+0xac>
			{
				Set_Bit( DDRB , PinNum);
 2ac:	87 e3       	ldi	r24, 0x37	; 55
 2ae:	90 e0       	ldi	r25, 0x00	; 0
 2b0:	27 e3       	ldi	r18, 0x37	; 55
 2b2:	30 e0       	ldi	r19, 0x00	; 0
 2b4:	f9 01       	movw	r30, r18
 2b6:	20 81       	ld	r18, Z
 2b8:	62 2f       	mov	r22, r18
 2ba:	29 81       	ldd	r18, Y+1	; 0x01
 2bc:	42 2f       	mov	r20, r18
 2be:	50 e0       	ldi	r21, 0x00	; 0
 2c0:	21 e0       	ldi	r18, 0x01	; 1
 2c2:	30 e0       	ldi	r19, 0x00	; 0
 2c4:	02 c0       	rjmp	.+4      	; 0x2ca <DIO_SetPinDirection+0xa2>
 2c6:	22 0f       	add	r18, r18
 2c8:	33 1f       	adc	r19, r19
 2ca:	4a 95       	dec	r20
 2cc:	e2 f7       	brpl	.-8      	; 0x2c6 <DIO_SetPinDirection+0x9e>
 2ce:	26 2b       	or	r18, r22
 2d0:	fc 01       	movw	r30, r24
 2d2:	20 83       	st	Z, r18
			}
			if(PinDirection== 0)
 2d4:	8a 81       	ldd	r24, Y+2	; 0x02
 2d6:	88 23       	and	r24, r24
 2d8:	a9 f4       	brne	.+42     	; 0x304 <DIO_SetPinDirection+0xdc>
			{
				Clear_Bit( DDRB , PinNum);
 2da:	87 e3       	ldi	r24, 0x37	; 55
 2dc:	90 e0       	ldi	r25, 0x00	; 0
 2de:	27 e3       	ldi	r18, 0x37	; 55
 2e0:	30 e0       	ldi	r19, 0x00	; 0
 2e2:	f9 01       	movw	r30, r18
 2e4:	20 81       	ld	r18, Z
 2e6:	62 2f       	mov	r22, r18
 2e8:	29 81       	ldd	r18, Y+1	; 0x01
 2ea:	42 2f       	mov	r20, r18
 2ec:	50 e0       	ldi	r21, 0x00	; 0
 2ee:	21 e0       	ldi	r18, 0x01	; 1
 2f0:	30 e0       	ldi	r19, 0x00	; 0
 2f2:	02 c0       	rjmp	.+4      	; 0x2f8 <DIO_SetPinDirection+0xd0>
 2f4:	22 0f       	add	r18, r18
 2f6:	33 1f       	adc	r19, r19
 2f8:	4a 95       	dec	r20
 2fa:	e2 f7       	brpl	.-8      	; 0x2f4 <DIO_SetPinDirection+0xcc>
 2fc:	20 95       	com	r18
 2fe:	26 23       	and	r18, r22
 300:	fc 01       	movw	r30, r24
 302:	20 83       	st	Z, r18
			}
		}
		if(PinNum > 15 && PinNum < 24)
 304:	89 81       	ldd	r24, Y+1	; 0x01
 306:	80 31       	cpi	r24, 0x10	; 16
 308:	90 f1       	brcs	.+100    	; 0x36e <DIO_SetPinDirection+0x146>
 30a:	89 81       	ldd	r24, Y+1	; 0x01
 30c:	88 31       	cpi	r24, 0x18	; 24
 30e:	78 f5       	brcc	.+94     	; 0x36e <DIO_SetPinDirection+0x146>
		{
			if(PinDirection== 1)
 310:	8a 81       	ldd	r24, Y+2	; 0x02
 312:	81 30       	cpi	r24, 0x01	; 1
 314:	a1 f4       	brne	.+40     	; 0x33e <DIO_SetPinDirection+0x116>
			{
				Set_Bit( DDRC , PinNum);
 316:	84 e3       	ldi	r24, 0x34	; 52
 318:	90 e0       	ldi	r25, 0x00	; 0
 31a:	24 e3       	ldi	r18, 0x34	; 52
 31c:	30 e0       	ldi	r19, 0x00	; 0
 31e:	f9 01       	movw	r30, r18
 320:	20 81       	ld	r18, Z
 322:	62 2f       	mov	r22, r18
 324:	29 81       	ldd	r18, Y+1	; 0x01
 326:	42 2f       	mov	r20, r18
 328:	50 e0       	ldi	r21, 0x00	; 0
 32a:	21 e0       	ldi	r18, 0x01	; 1
 32c:	30 e0       	ldi	r19, 0x00	; 0
 32e:	02 c0       	rjmp	.+4      	; 0x334 <DIO_SetPinDirection+0x10c>
 330:	22 0f       	add	r18, r18
 332:	33 1f       	adc	r19, r19
 334:	4a 95       	dec	r20
 336:	e2 f7       	brpl	.-8      	; 0x330 <DIO_SetPinDirection+0x108>
 338:	26 2b       	or	r18, r22
 33a:	fc 01       	movw	r30, r24
 33c:	20 83       	st	Z, r18
			}
			if(PinDirection== 0)
 33e:	8a 81       	ldd	r24, Y+2	; 0x02
 340:	88 23       	and	r24, r24
 342:	a9 f4       	brne	.+42     	; 0x36e <DIO_SetPinDirection+0x146>
			{
				Clear_Bit( DDRC , PinNum);
 344:	84 e3       	ldi	r24, 0x34	; 52
 346:	90 e0       	ldi	r25, 0x00	; 0
 348:	24 e3       	ldi	r18, 0x34	; 52
 34a:	30 e0       	ldi	r19, 0x00	; 0
 34c:	f9 01       	movw	r30, r18
 34e:	20 81       	ld	r18, Z
 350:	62 2f       	mov	r22, r18
 352:	29 81       	ldd	r18, Y+1	; 0x01
 354:	42 2f       	mov	r20, r18
 356:	50 e0       	ldi	r21, 0x00	; 0
 358:	21 e0       	ldi	r18, 0x01	; 1
 35a:	30 e0       	ldi	r19, 0x00	; 0
 35c:	02 c0       	rjmp	.+4      	; 0x362 <DIO_SetPinDirection+0x13a>
 35e:	22 0f       	add	r18, r18
 360:	33 1f       	adc	r19, r19
 362:	4a 95       	dec	r20
 364:	e2 f7       	brpl	.-8      	; 0x35e <DIO_SetPinDirection+0x136>
 366:	20 95       	com	r18
 368:	26 23       	and	r18, r22
 36a:	fc 01       	movw	r30, r24
 36c:	20 83       	st	Z, r18
			}
		}
		
		if(PinNum > 24 && PinNum < 32)
 36e:	89 81       	ldd	r24, Y+1	; 0x01
 370:	89 31       	cpi	r24, 0x19	; 25
 372:	90 f1       	brcs	.+100    	; 0x3d8 <DIO_SetPinDirection+0x1b0>
 374:	89 81       	ldd	r24, Y+1	; 0x01
 376:	80 32       	cpi	r24, 0x20	; 32
 378:	78 f5       	brcc	.+94     	; 0x3d8 <DIO_SetPinDirection+0x1b0>
		{
			if(PinDirection== 1)
 37a:	8a 81       	ldd	r24, Y+2	; 0x02
 37c:	81 30       	cpi	r24, 0x01	; 1
 37e:	a1 f4       	brne	.+40     	; 0x3a8 <DIO_SetPinDirection+0x180>
			{
				Set_Bit( DDRD , PinNum);
 380:	81 e3       	ldi	r24, 0x31	; 49
 382:	90 e0       	ldi	r25, 0x00	; 0
 384:	21 e3       	ldi	r18, 0x31	; 49
 386:	30 e0       	ldi	r19, 0x00	; 0
 388:	f9 01       	movw	r30, r18
 38a:	20 81       	ld	r18, Z
 38c:	62 2f       	mov	r22, r18
 38e:	29 81       	ldd	r18, Y+1	; 0x01
 390:	42 2f       	mov	r20, r18
 392:	50 e0       	ldi	r21, 0x00	; 0
 394:	21 e0       	ldi	r18, 0x01	; 1
 396:	30 e0       	ldi	r19, 0x00	; 0
 398:	02 c0       	rjmp	.+4      	; 0x39e <DIO_SetPinDirection+0x176>
 39a:	22 0f       	add	r18, r18
 39c:	33 1f       	adc	r19, r19
 39e:	4a 95       	dec	r20
 3a0:	e2 f7       	brpl	.-8      	; 0x39a <DIO_SetPinDirection+0x172>
 3a2:	26 2b       	or	r18, r22
 3a4:	fc 01       	movw	r30, r24
 3a6:	20 83       	st	Z, r18
			}
			if(PinDirection== 0)
 3a8:	8a 81       	ldd	r24, Y+2	; 0x02
 3aa:	88 23       	and	r24, r24
 3ac:	a9 f4       	brne	.+42     	; 0x3d8 <DIO_SetPinDirection+0x1b0>
			{
				Clear_Bit( DDRD , PinNum);
 3ae:	81 e3       	ldi	r24, 0x31	; 49
 3b0:	90 e0       	ldi	r25, 0x00	; 0
 3b2:	21 e3       	ldi	r18, 0x31	; 49
 3b4:	30 e0       	ldi	r19, 0x00	; 0
 3b6:	f9 01       	movw	r30, r18
 3b8:	20 81       	ld	r18, Z
 3ba:	62 2f       	mov	r22, r18
 3bc:	29 81       	ldd	r18, Y+1	; 0x01
 3be:	42 2f       	mov	r20, r18
 3c0:	50 e0       	ldi	r21, 0x00	; 0
 3c2:	21 e0       	ldi	r18, 0x01	; 1
 3c4:	30 e0       	ldi	r19, 0x00	; 0
 3c6:	02 c0       	rjmp	.+4      	; 0x3cc <DIO_SetPinDirection+0x1a4>
 3c8:	22 0f       	add	r18, r18
 3ca:	33 1f       	adc	r19, r19
 3cc:	4a 95       	dec	r20
 3ce:	e2 f7       	brpl	.-8      	; 0x3c8 <DIO_SetPinDirection+0x1a0>
 3d0:	20 95       	com	r18
 3d2:	26 23       	and	r18, r22
 3d4:	fc 01       	movw	r30, r24
 3d6:	20 83       	st	Z, r18
			}
		}
}
 3d8:	00 00       	nop
 3da:	0f 90       	pop	r0
 3dc:	0f 90       	pop	r0
 3de:	df 91       	pop	r29
 3e0:	cf 91       	pop	r28
 3e2:	08 95       	ret

000003e4 <main>:
#include "DIO_Registers_Definitions.h"
#include "DIO_Registers.h"


int main(void)
{
 3e4:	cf 93       	push	r28
 3e6:	df 93       	push	r29
 3e8:	00 d0       	rcall	.+0      	; 0x3ea <main+0x6>
 3ea:	cd b7       	in	r28, 0x3d	; 61
 3ec:	de b7       	in	r29, 0x3e	; 62
	int x=0;
 3ee:	1a 82       	std	Y+2, r1	; 0x02
 3f0:	19 82       	std	Y+1, r1	; 0x01
    /* Replace with your application code */
	DIO_SetPinDirection(PIN0,OUTPUT);
 3f2:	61 e0       	ldi	r22, 0x01	; 1
 3f4:	80 e0       	ldi	r24, 0x00	; 0
 3f6:	0e 94 14 01 	call	0x228	; 0x228 <DIO_SetPinDirection>
	DIO_WritePin(PIN0,HIGH);
 3fa:	61 e0       	ldi	r22, 0x01	; 1
 3fc:	80 e0       	ldi	r24, 0x00	; 0
 3fe:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_WritePin>
	x++;
 402:	89 81       	ldd	r24, Y+1	; 0x01
 404:	9a 81       	ldd	r25, Y+2	; 0x02
 406:	01 96       	adiw	r24, 0x01	; 1
 408:	9a 83       	std	Y+2, r25	; 0x02
 40a:	89 83       	std	Y+1, r24	; 0x01
 40c:	80 e0       	ldi	r24, 0x00	; 0
 40e:	90 e0       	ldi	r25, 0x00	; 0
}
 410:	0f 90       	pop	r0
 412:	0f 90       	pop	r0
 414:	df 91       	pop	r29
 416:	cf 91       	pop	r28
 418:	08 95       	ret

0000041a <_exit>:
 41a:	f8 94       	cli

0000041c <__stop_program>:
 41c:	ff cf       	rjmp	.-2      	; 0x41c <__stop_program>
